###########################
## 安装服务端和php客户端 ##
###########################
1 下载服务端 http://www.mongodb.org/downloads（在 MongoDB2.2 版本后已经不再支持 Windows XP 系统。）安装
2 MongoDB将数据目录存储在 db 目录下。但是这个数据目录不会主动创建，我们在安装完成后需要创建它。请注意，数据目录应该放在根目录下（(如： C:\ 或者 D:\ 等 )。
  例如 D:\mongodbdata\db
3 运行
    ① 命令行模式运行 mongod.exe --dbpath c:\data\db
	② 将MongoDB服务器作为Windows服务运行(git bash)
		mongod.exe --bind_ip 127.0.0.1 --logpath "D:\mongodbdata\mongodb.log" --logappend --dbpath "D:\mongodbdata\db" --port 27017 --serviceName "mongodbd" --serviceDisplayName "mongod" --install
	下表为mongodb启动的参数说明：
	参数 					描述
	--bind_ip 				绑定服务IP，若绑定127.0.0.1，则只能本机访问，不指定默认本地所有IP
	--logpath 				定MongoDB日志文件，注意是指定文件不是目录
	--logappend 			使用追加的方式写日志
	--dbpath 				指定数据库路径
	--port 					指定服务端口号，默认端口27017
	--serviceName 			指定服务名称
	--serviceDisplayName 	指定服务名称，有多个mongodb服务时执行。
	--install 				指定作为一个Windows服务安装。
4 MongoDB后台管理 Shell
  命令行模式执行 D:\Program Files\MongoDB\Server\3.4\bin\mongod
  当你进入mongoDB后台后，它默认会链接到 test 文档（数据库）
5 安装php扩展 http://www.runoob.com/mongodb/mongodb-install-php-driver.html
  我的系统虽然是64位的 但因为php安装的是32位的所以扩展也适用32位的
  Github上已经提供了用于window平台的预编译php mongodb驱动二进制包(下载地址： https://s3.amazonaws.com/drivers.mongodb.org/php/index.html)，你可以下载与你php对应的版本，但是你需要注意以下几点问题：
    VC6 是运行于 Apache 服务器
    'Thread safe'（线程安全）是运行在Apache上以模块的PHP上，如果你以CGI的模式运行PHP，请选择非线程安全模式（' non-thread safe'）。
    VC9是运行于 IIS 服务器上。
    下载完你需要的二进制包后，解压压缩包，将'php_mongo.dll'文件添加到你的PHP扩展目录中（ext）。ext目录通常在PHP安装目录下的ext目录。
  打开php配置文件 php.ini 添加以下配置：
  extension=php_mongo.dll
  重启服务器。
  通过浏览器访问phpinfo
########################
## 安装可视化管理工具 ##
########################
https://mongobooster.com/downloads

#######################################################################################
## MongoDB 主从复制 mongoDB官方已经不建议使用主从模式了，替代方案是采用副本集的模式  ##
#######################################################################################
http://www.lanceyan.com/tech/mongodb/mongodb_cluster_1.html
在同一台主机开两个端口来模拟多台服务器的主从
27020 主 /d/Program\ Files/MongoDB/Server/3.4/bin/mongod --master --bind_ip 127.0.0.1 --port 27020 --dbpath "/d/mongodbdata/master" --logpath "/d/mongodbdata/log/master.log" --logappend --serviceName "mongodbd_master" --serviceDisplayName "mongodbd_master" --install
27021 从 /d/Program\ Files/MongoDB/Server/3.4/bin/mongod --slave --source 127.0.0.1:27020 --bind_ip 127.0.0.1 --port 27021 --dbpath "/d/mongodbdata/slave" --logpath "/d/mongodbdata/log/slave.log" --logappend --serviceName "mongodbd_slave" --serviceDisplayName "mongodbd_slave" --install
php客户端可以对27020进行读写，仅可以对27021读。命令行模式操作受阻。
搭建了这套主从复制系统是不是就很稳健了，其实不然。。。看看这几个问题？
    主节点挂了能否自动切换连接？目前需要手工切换。
    主节点的写压力过大如何解决？
    从节点每个上面的数据都是对数据库全量拷贝，从节点压力会不会过大？
    就算对从节点路由实施路由访问策略能否做到自动扩展？

#####################################################################################
## MongoDB 副本集 mongoDB官方已经不建议使用主从模式了，替代方案是采用副本集的模式  ##
#####################################################################################
http://www.lanceyan.com/tech/mongodb/mongodb_repset1.html
分别开三个端口创建副本集
27020 /d/Program\ Files/MongoDB/Server/3.4/bin/mongod --replSet repset --bind_ip 127.0.0.1 --port 27020 --dbpath "/d/mongodbdata/replset/rep0" --logpath "/d/mongodbdata/replset/log/rep0.log" --logappend --serviceName "mongodbd_rep0" --serviceDisplayName "mongodbd_rep0" --install
27021 /d/Program\ Files/MongoDB/Server/3.4/bin/mongod --replSet repset --bind_ip 127.0.0.1 --port 27021 --dbpath "/d/mongodbdata/replset/rep1" --logpath "/d/mongodbdata/replset/log/rep1.log" --logappend --serviceName "mongodbd_rep1" --serviceDisplayName "mongodbd_rep1" --install
27022 /d/Program\ Files/MongoDB/Server/3.4/bin/mongod --replSet repset --bind_ip 127.0.0.1 --port 27022 --dbpath "/d/mongodbdata/replset/rep2" --logpath "/d/mongodbdata/replset/log/rep2.log" --logappend --serviceName "mongodbd_rep2" --serviceDisplayName "mongodbd_rep2" --install

登陆被挑选为主节点的服务器
#使用admin数据库
use admin
#执行初始化程序
rs.initiate({
	"_id" : "repset",
	"members" : [
		{
			"_id" : 0,
			"host" : "127.0.0.1:27020"
		},
		{
			"_id" : 1,
			"host" : "127.0.0.1:27021"
		},
		{
			"_id" : 2,
			"host" : "127.0.0.1:27022"
		}
	]
});
初始化的时候需要注意，可能会失败。报错为has data already, cannot initiate set
设置副本集的时候是不允许副本节点有数据的，但mongodb首次启动会有初始化数据，我们需要把副本节点的数据库全部清空。
在清空数据的时候还要注意，直接清空有可能会失败。因为上面的启动参数中已经设置了主从。mongodb默认是从主节点读写数据的，副本节点上不允许读。
我们直连副本节点连读取的权限都没有更别说写了。所以我们重启从节点重启的时候去掉 --replSet repset 参数。清理完数据后再加上 --replSet repset 再次重启副本节点
这时再次执行初始化成功
查看副本集数据前需要执行 rs.setSlaveOk() 后才能获取本次链接的读取权限
--replSet repset 表示这个集群的名字 我去

以副本集实例启动后
/d/Program\ Files/MongoDB/Server/3.4/bin/mongod --bind_ip 127.0.0.1 --port 27051 --dbpath "/d/mongodbdata/server3/config/data" --logpath "/d/mongodbdata/server3/config/log/config.log" --logappend --serviceName "mongodbd_svr3_configsvr" --serviceDisplayName "mongodbd_svr3_configsvr" --install
使用 rs.add(HOST_NAME:PORT) 添加副本集
使用 rs.remove(HOST_NAME:PORT) 删除副本集
########################
## MongoDB 分片       ##
########################
1.在一台机子上实现分片和副本集的数据目录结构
├─server0
│  ├─config
│  │  ├─data
│  │  └─log
│  ├─mongos
│  │  └─log
│  ├─shard1
│  │  ├─data
│  │  └─log
│  ├─shard2
│  │  ├─data
│  │  └─log
│  └─shard3
│      ├─data
│      └─log
├─server1
│  ├─config
│  │  ├─data
│  │  └─log
│  ├─mongos
│  │  └─log
│  ├─shard1
│  │  ├─data
│  │  └─log
│  ├─shard2
│  │  ├─data
│  │  └─log
│  └─shard3
│      ├─data
│      └─log
└─server2
    ├─config
    │  ├─data
    │  └─log
    ├─mongos
    │  └─log
    ├─shard1
    │  ├─data
    │  └─log
    ├─shard2
    │  ├─data
    │  └─log
    └─shard3
        ├─data
        └─log
2.端口分配
server0
	mongos 27020 config 27021 shard1 27022 shard2 27023 shard3 27024
server1
	mongos 27030 config 27031 shard1 27032 shard2 27033 shard3 27034
server2
	mongos 27040 config 27041 shard1 27042 shard2 27043 shard3 27044
3.在每一台服务器分别启动配置服务器。3.2之后这里要部署成一个副本集
/d/Program\ Files/MongoDB/Server/3.4/bin/mongod --configsvr --replSet repset_configsvr --bind_ip 127.0.0.1 --port 27021 --dbpath "/d/mongodbdata/server0/config/data" --logpath "/d/mongodbdata/server0/config/log/config.log" --logappend --serviceName "mongodbd_svr0_configsvr" --serviceDisplayName "mongodbd_svr0_configsvr" --install
/d/Program\ Files/MongoDB/Server/3.4/bin/mongod --configsvr --replSet repset_configsvr --bind_ip 127.0.0.1 --port 27031 --dbpath "/d/mongodbdata/server1/config/data" --logpath "/d/mongodbdata/server1/config/log/config.log" --logappend --serviceName "mongodbd_svr1_configsvr" --serviceDisplayName "mongodbd_svr1_configsvr" --install
/d/Program\ Files/MongoDB/Server/3.4/bin/mongod --configsvr --replSet repset_configsvr --bind_ip 127.0.0.1 --port 27041 --dbpath "/d/mongodbdata/server2/config/data" --logpath "/d/mongodbdata/server2/config/log/config.log" --logappend --serviceName "mongodbd_svr2_configsvr" --serviceDisplayName "mongodbd_svr2_configsvr" --install
挑一台作为主节点，清空副本节点的数据
在主节点执行配置文件
use admin
rs.initiate({
	"_id" : "repset_configsvr",
	"members" : [
		{
			"_id" : 0,
			"host" : "127.0.0.1:27021"
		},
		{
			"_id" : 1,
			"host" : "127.0.0.1:27031"
		},
		{
			"_id" : 2,
			"host" : "127.0.0.1:27041"
		}
	]
});
4.在每一台服务器分别启动mongos服务器。
/d/Program\ Files/MongoDB/Server/3.4/bin/mongos --configdb repset_configsvr/127.0.0.1:27021,127.0.0.1:27031,127.0.0.1:27041 --bind_ip 127.0.0.1 --port 27020 --logpath "/d/mongodbdata/server0/mongos/log/mongos.log" --logappend --serviceName "mongodbd_svr0_mongos" --serviceDisplayName "mongodbd_svr0_mongos" --install
/d/Program\ Files/MongoDB/Server/3.4/bin/mongos --configdb repset_configsvr/127.0.0.1:27021,127.0.0.1:27031,127.0.0.1:27041 --bind_ip 127.0.0.1 --port 27030 --logpath "/d/mongodbdata/server1/mongos/log/mongos.log" --logappend --serviceName "mongodbd_svr1_mongos" --serviceDisplayName "mongodbd_svr1_mongos" --install
/d/Program\ Files/MongoDB/Server/3.4/bin/mongos --configdb repset_configsvr/127.0.0.1:27021,127.0.0.1:27031,127.0.0.1:27041 --bind_ip 127.0.0.1 --port 27040 --logpath "/d/mongodbdata/server2/mongos/log/mongos.log" --logappend --serviceName "mongodbd_svr2_mongos" --serviceDisplayName "mongodbd_svr2_mongos" --install
5.配置各个分片的副本集。
server0
	mongos 27020 config 27021 shard1 27022 shard2 27023 shard3 27024
server1
	mongos 27030 config 27031 shard1 27032 shard2 27033 shard3 27034
server2
	mongos 27040 config 27041 shard1 27042 shard2 27043 shard3 27044
第一个分片副本集 [三台服务器] 的设置
/d/Program\ Files/MongoDB/Server/3.4/bin/mongod --shardsvr --replSet shard1 --bind_ip 127.0.0.1 --port 27022 --dbpath "/d/mongodbdata/server0/shard1/data" --logpath "/d/mongodbdata/server0/shard1/log/shard1.log" --logappend --serviceName "mongodbd_svr0_shard1" --serviceDisplayName "mongodbd_svr0_shard1" --install
/d/Program\ Files/MongoDB/Server/3.4/bin/mongod --shardsvr --replSet shard1 --bind_ip 127.0.0.1 --port 27032 --dbpath "/d/mongodbdata/server1/shard1/data" --logpath "/d/mongodbdata/server1/shard1/log/shard1.log" --logappend --serviceName "mongodbd_svr1_shard1" --serviceDisplayName "mongodbd_svr1_shard1" --install
/d/Program\ Files/MongoDB/Server/3.4/bin/mongod --shardsvr --replSet shard1 --bind_ip 127.0.0.1 --port 27042 --dbpath "/d/mongodbdata/server2/shard1/data" --logpath "/d/mongodbdata/server2/shard1/log/shard1.log" --logappend --serviceName "mongodbd_svr2_shard1" --serviceDisplayName "mongodbd_svr2_shard1" --install
初始化副本集
use admin
rs.initiate({
	_id:"shard1",
	members:[
		{_id:0,host:"127.0.0.1:27022"},
		{_id:1,host:"127.0.0.1:27032"},
		{_id:2,host:"127.0.0.1:27042",arbiterOnly:true}
	]
});

第二个分片副本集 [三台服务器] 的设置
/d/Program\ Files/MongoDB/Server/3.4/bin/mongod --shardsvr --replSet shard2 --bind_ip 127.0.0.1 --port 27023 --dbpath "/d/mongodbdata/server0/shard2/data" --logpath "/d/mongodbdata/server0/shard2/log/shard2.log" --logappend --serviceName "mongodbd_svr0_shard2" --serviceDisplayName "mongodbd_svr0_shard2" --install
/d/Program\ Files/MongoDB/Server/3.4/bin/mongod --shardsvr --replSet shard2 --bind_ip 127.0.0.1 --port 27033 --dbpath "/d/mongodbdata/server1/shard2/data" --logpath "/d/mongodbdata/server1/shard2/log/shard2.log" --logappend --serviceName "mongodbd_svr1_shard2" --serviceDisplayName "mongodbd_svr1_shard2" --install
/d/Program\ Files/MongoDB/Server/3.4/bin/mongod --shardsvr --replSet shard2 --bind_ip 127.0.0.1 --port 27043 --dbpath "/d/mongodbdata/server2/shard2/data" --logpath "/d/mongodbdata/server2/shard2/log/shard2.log" --logappend --serviceName "mongodbd_svr2_shard2" --serviceDisplayName "mongodbd_svr2_shard2" --install
初始化副本集
use admin
rs.initiate({
	_id:"shard2",
	members:[
		{_id:0,host:"127.0.0.1:27023"},
		{_id:1,host:"127.0.0.1:27033"},
		{_id:2,host:"127.0.0.1:27043",arbiterOnly:true}
	]
});

第三个分片副本集 [三台服务器] 的设置
/d/Program\ Files/MongoDB/Server/3.4/bin/mongod --shardsvr --replSet shard3 --bind_ip 127.0.0.1 --port 27024 --dbpath "/d/mongodbdata/server0/shard3/data" --logpath "/d/mongodbdata/server0/shard3/log/shard3.log" --logappend --serviceName "mongodbd_svr0_shard3" --serviceDisplayName "mongodbd_svr0_shard3" --install
/d/Program\ Files/MongoDB/Server/3.4/bin/mongod --shardsvr --replSet shard3 --bind_ip 127.0.0.1 --port 27034 --dbpath "/d/mongodbdata/server1/shard3/data" --logpath "/d/mongodbdata/server1/shard3/log/shard3.log" --logappend --serviceName "mongodbd_svr1_shard3" --serviceDisplayName "mongodbd_svr1_shard3" --install
/d/Program\ Files/MongoDB/Server/3.4/bin/mongod --shardsvr --replSet shard3 --bind_ip 127.0.0.1 --port 27044 --dbpath "/d/mongodbdata/server2/shard3/data" --logpath "/d/mongodbdata/server2/shard3/log/shard3.log" --logappend --serviceName "mongodbd_svr2_shard3" --serviceDisplayName "mongodbd_svr2_shard3" --install
初始化副本集
use admin
rs.initiate({
	_id:"shard3",
	members:[
		{_id:0,host:"127.0.0.1:27024"},
		{_id:1,host:"127.0.0.1:27034"},
		{_id:2,host:"127.0.0.1:27044",arbiterOnly:true}
	]
});

6.目前搭建了mongodb配置服务器、路由服务器，各个分片服务器，不过应用程序连接到 mongos 路由服务器并不能使用分片机制，还需要在程序里设置分片配置，让分片生效。
连接到svr0的mongo
use admin
db.runCommand( { addshard : "shard1/127.0.0.1:27022,127.0.0.1:27032,127.0.0.1:27042"});
db.runCommand( { addshard : "shard2/127.0.0.1:27023,127.0.0.1:27033,127.0.0.1:27043"});
db.runCommand( { addshard : "shard3/127.0.0.1:27024,127.0.0.1:27034,127.0.0.1:27044"});
#查看分片服务器的配置
db.runCommand( { listshards : 1 } );
不用每台都设置吧

7.目前配置服务、路由服务、分片服务、副本集服务都已经串联起来了，但我们的目的是希望插入数据，数据能够自动分片，就差那么一点点，一点点。。。 
连接在mongos上，准备让指定的数据库、指定的集合分片生效。
#指定testdb分片生效
db.runCommand( { enablesharding :"testdb"});
#指定数据库里需要分片的集合和片键
db.runCommand( { shardcollection : "testdb.table1",key : {id: 1} } )
我们设置testdb的 table1 表需要分片，根据 id 自动分片到 shard1 ，shard2，shard3 上面去。要这样设置是因为不是所有mongodb 的数据库和表 都需要分片！ 

8.测试分片配置结果
D:\WXMP\www\learngit\exercise\nosql\MongoDB\shard.php
连接mongos 执行命令查看分布情况
db.table1.stats();